[{
	"title": "《Kotlin进化之路》之【第二章：揭开Kotlin的基础面纱】（六）",
	"time": "2018年05月04日",
	"desc": "循环控制流程的基本语法和其它语言也是类似的，有其它语言基础的朋友这一章节也可以选择略过，不过想学习的话也未尝不可，也许说不定有重新的一个认识",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://blog.csdn.net/ming_147/article/details/80194777"
}, {
	"title": "《Kotlin进化之路》之【第二章：揭开Kotlin的基础面纱】（五）",
	"time": "2018年05月04日",
	"desc": "对于有Java基础的同学来说，对这两个类再熟悉不过了，不熟悉的同学也没有关系，接下来我也会一点一点的去剖析",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://blog.csdn.net/ming_147/article/details/80194640"
}, {
	"title": "《Kotlin进化之路》之【第二章：揭开Kotlin的基础面纱】（四）",
	"time": "2018年05月04日",
	"desc": "字符串是程序开发中最常见的，出现的频率也是最高的，Kotlin中的字符串和Java语言类似，用String来表示字符串",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://blog.csdn.net/ming_147/article/details/80194445"
}, {
	"title": "《Kotlin进化之路》之【第二章：揭开Kotlin的基础面纱】（三）",
	"time": "2018年03月27日",
	"desc": "算术运算符用在数学表达式中，它们的作用和在数学中的作用一样。下表列出了所有的算术运算符。",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://blog.csdn.net/ming_147/article/details/79709471"
}, {
	"title": "《Kotlin进化之路》之【第二章：揭开Kotlin的基础面纱】（二）",
	"time": "2018年03月26日",
	"desc": "在 Kotlin 中，所有变量的成员方法和属性都是一个对象，一些类型是内建的，它们的实现是优化过的，但对用户来说它们就像普通的类一样",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://blog.csdn.net/ming_147/article/details/79701628"
}, {
	"title": "《Kotlin进化之路》之【第二章：揭开Kotlin的基础面纱】（一）",
	"time": "2018年03月26日",
	"desc": "通过上一章的学习，是不是已经感受到了Kotlin语言的魅力之处，环境的配置，IDE（开发工具）的选择，至关重要，毕竟工欲善其事必先利其器",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://blog.csdn.net/ming_147/article/details/79701585"
}, {
	"title": "第四章·那些你不知道的Kotlin 中的类特性(上)",
	"time": "2017-08-18",
	"desc": "前面三章的内容是写给希望快速了解 Kotlin 语言的大忙人的。而从本章开始，才会真正讲述 Kotlin 语言的神奇之处。",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://mp.weixin.qq.com/s?__biz=MzI1NTU4MjU3OA==&mid=100000272&idx=4&sn=a80387ff634387df4da58f43f0f7d644&scene=19#wechat_redirect"
}, {
	"title": "第三章·所谓的混编Kotlin 与 Java 有什么区别",
	"time": "2017-08-18",
	"desc": "虽然 Kotlin 的开发很方便，但当你与他人协作时，总会碰到 Java 与 Kotlin 代码共存的代码项目。本章就教你如何优雅的实现 Kotlin 与 Java 混合编程",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://mp.weixin.qq.com/s?__biz=MzI1NTU4MjU3OA==&mid=100000272&idx=3&sn=542ab8553397e3a08cfc97acee97907d&scene=19#wechat_redirect"
}, {
	"title": "第二章·Kotlin语法的特性",
	"time": "2017-08-18",
	"desc": "Kotlin 程序是什么样子的？很有可能你觉得 Kotlin 语言有点古怪，充满了var field: String这样的语法。然而读完本章后，你将不再对这些语法感到陌生，甚至很可能喜欢上它们。",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://mp.weixin.qq.com/s?__biz=MzI1NTU4MjU3OA==&mid=100000272&idx=2&sn=6b0e347334082aabefa8507894e4dbe3&scene=19#wechat_redirect"
}, {
	"title": "初识，揭开Kotlin的面纱",
	"time": "2017-08-18",
	"desc": "相比于 Java，Kotlin 有着更好的语法结构，安全性和开发工具支持。Kotlin 中没有基础类型，数组是定长的，泛型是安全的，即便运行时也是安全的。此外，该语言支持闭包，还可通过内联进行优化。不过，它不支持检查异常（Checked Exceptions），许多语言设计者认为这是它的瑕疵。不论如何，重要的是 Java 和 Kotlin 之间的互操作性：Kotlin 可以调用 Java，反之亦可。",
	"image": "1",
	"author": "AbnerMing",
	"file_id": "0",
	"link": "https://mp.weixin.qq.com/s?__biz=MzI1NTU4MjU3OA==&mid=100000272&idx=1&sn=004f5a35dac64a9873c6dd79c1d65129&scene=19#wechat_redirect"
}]
